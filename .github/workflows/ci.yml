name: "Test, Build, TestLab & Release"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  build:
    name: Test, Build, TestLab & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
      - run: flutter --version
      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk --debug
      # Upload apk
      - name: Upload app APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug
          path: build/app/outputs/apk/debug/app-debug.apk
  firebase:
    name: Run UI tests with Firebase Test Lab
    needs: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Download Android test APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug
      
      - name: 'Auth Google CLI'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set current project
        run: gcloud config set project takeover-light

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=pl,orientation=portrait
      # Comment app bundle and ios now for fast testing
      # - run: flutter build appbundle
      # - run: |
      #     flutter build ios --no-codesign
      #     cd build/ios/iphoneos
      #     mkdir Payload
      #     cd Payload
      #     ln -s ../Runner.app
      #     cd ..
      #     zip -r app.ipa Payload
      # use this when all steps passed
      # - name: Push to Releases
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/debug/*,build/ios/iphoneos/app.ipa"
      #     tag: v1.0.${{ github.run_number }}
      #     token: ${{ secrets.TOKEN }}






# push to master, main, develop
# pull request on main master